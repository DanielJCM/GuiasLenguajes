##### Instalación de Mezzanine - CMC basado en Django by dM #####

Official website --> http://mezzanine.jupo.org/

####################################################
##### Instalación en GNU/Linux Debian 7 Wheezy #####
####################################################

# apt-get update

# apt-get install build-essential

# apt-get install cvs subversion git-core mercurial

# apt-get install python-setuptools python-dev python2.7-dev python-virtualenv python-software-properties libpq-dev libjpeg-dev python-imaging

# apt-get install libtiff4-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.5-dev tk8.5-dev

# curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py | python - // Opcional

# curl https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python - // Opcional

# apt-get install python-virtualenv

######################################
##### Creamos un entorno virtual #####
######################################

$ virtualenv mezzanine_env

$ cd mezzanine_env

$ source /bin/activate

(mezzanine_env)$ pip install mezzanine

###############################################
##### Creamos un nuevo proyecto mezzanine #####
###############################################

...En otro directorio

(mezzanine_env)$ mezzanine-project mezzanine_project

(mezzanine_env)$ cd mezzanine_project

(mezzanine_env)$ python manage.py migrate

(mezzanine_env)$ python manage.py createsuperuser

add username, mail and password...

###########################################
##### Corremos el servidor de pruebas #####
###########################################

(mezzanine_env)$ python manage.py runserver 0.0.0.0:8000

----------------------------------------------------

####################################################
##### Instalación en GNU/Linux Debian 8 Jessie #####
####################################################

# apt-get install build-essential

# apt-get install cvs subversion git-core mercurial

# apt-get install python-dev python-setuptools python2.7-dev python-software-properties
 libpq-dev libjpeg-dev python-imaging

$ apt-get install libtiff5 libjpeg-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.5-dev tk8.5-dev python-pip

$ pip install mezzanine

########################################
##### Poner la interfáz en español #####
########################################

En el settings.py

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
#LANGUAGE_CODE = "en"
LANGUAGE_CODE = "es-VE"

# Supported languages
LANGUAGES = (
    #('en', _('English')),
    ('es', _('Spanish')),
)

######################################
##### Instalar django-feedparser #####
######################################

Importing RSS

Simply run the import_rss command where the rss-url argument contains the URL for your RSS feed:

$ python manage.py import_rss --mezzanine-user=.. --rss-url=url

$ pip install django-feedparser

ó

$ pip install feedparser

y

$ pip install python-dateutil

###################################################
##### Añadiendo compatibilidad con postgresql #####
###################################################

# aptitude install postgresql postgresql-server

# aptitude install python-psycopg2

# pip install postgres

# pip install db-psycopg2

--- Añadiendo la db de postgres ---

Editar el local_settings.py

DATABASES = {
    "default": {
        # Ends with "postgresql_psycopg2", "mysql", "sqlite3" or "oracle".
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        # DB name or path to database file if using sqlite3.
        "NAME": "xxx",
        # Not used with sqlite3.
        "USER": "xxx",
        # Not used with sqlite3.
        "PASSWORD": "p4ssw0rd",
        # Set to empty string for localhost. Not used with sqlite3.
        "HOST": "127.0.0.1",
        # Set to empty string for default. Not used with sqlite3.
        "PORT": "",
    }
}

----

ALLOWED_HOSTS = ["xxxxx.org.ve"]

###########################################
##### Añadiendo/Creando un nuevo tema #####
###########################################

Creamos una aplicación de Django, genérica, creamos los directorios (templates y static) correspondientes

$ python manage.py startapp app_name

Agregamos la aplicación/tema creado al principio de las INSTALLED_APPS del proyecto (importante)

Si tenemos un tema descargado, agregaremos sus plantillas y estáticos a nuestra aplicación creada.

##### Estructura de una app/tema #####

└── tema
    ├── admin.py
    ├── admin.pyc
    ├── apps.py
    ├── __init__.py
    ├── __init__.pyc
    ├── migrations
    │   ├── __init__.py
    │   └── __init__.pyc
    ├── models.py
    ├── models.pyc
    ├── templates
    │   ├── base.html
    │   ├── index.html
    │   └── search_results.html
    ├── tests.py
    └── views.py

##############################################
##### Templates a usar en un tema propio #####
##############################################

/Entornos_virtuales/mezzanine/lib/python2.7/site-packages/mezzanine/core/templates

################
##### Tips #####
################

-Configuración del Nombre de sitio y descripción del navbar en -> Opciones del panel de administración.

-Se habilita enlace hacia publicaciones "blog" en el panel lateral izquierdo del index

<img src="{{STATIC_URL}}/media/uploads/img/2.jpg"></img> // Para cargar una imágen desde los estáticos.

<link href="{{STATIC_URL}}/css/theme.css" rel="stylesheet"> // Para agregar los estilos a la página.

-Habilitar videos embebidos en los post: 

It actually needs to be changed in the admin. Log in to your admin, then in the top left hover over 'Site', then click on 'Settings'. Scroll down and you should see a setting called 'Rich text filter level'. Change this setting to low and then save. You should be able to embed your video now.

-Only in development, in settings.py for skip error to migrate, etc the allowed_hosts

ALLOWED_HOSTS = ["*"]

-Para habilitar el acceso al sitio administrativo a los nuevos usuarios (publicadores) se les debe dar permisos del sitio también (example.com).

-Para habilitar las miniaturas de los post, en settings.py:
# BLOG_USE_FEATURED_IMAGE = True
BLOG_USE_FEATURED_IMAGE = True
y se sube una imagen destacada a la noticia para que la muestre en el post_list y en el post_detail
